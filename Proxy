import java.util.ArrayList;
import java.util.List;
 
/**
 * Imagine que esta classe faz acessos ao banco de dados
 */
class PessoaDAO {
      public static Pessoa getPessoaByID(String id){
            System.out.println("select * from PESSOA where id="+id);
            return new PessoaImpl(id,"Pessoa " + id);
      }
}
 
/**
 * Interface comum entre o objeto real e o Proxy
 */
interface Pessoa {
      public String getNome();
      public String getId();
}
 
/**
 * Objeto real
 */
class PessoaImpl implements Pessoa {
      private final String nome;
      private final String id;
 
      public PessoaImpl(String id,String nome) {
            this.id       = id;
            this.nome = nome;
            // apenas para simular algo...
            System.out.println("Retornou a pessoa do banco de dados ->  " + nome);
      }
 
      @Override
      public String getNome() {
            return nome;
      }
      @Override
      public String getId() {
            return this.id;
      }
}
 
class ProxyPessoa implements Pessoa {
      private final String id;
 
      private Pessoa pessoa;//mesma interface
 
      public ProxyPessoa(String nome) {
            this.id = nome;
      }
 
      /**
       * Método comum da interface
       *
       * @see Pessoa#getNome()
       */
      @Override
      public String getNome() {
            if (pessoa == null) {
                  //Apenas cria o objeto real quando chamar este método
                  pessoa = PessoaDAO.getPessoaByID(this.id);
            }
            /** Delega para o objeto real **/
            return pessoa.getNome();
      }
 
      @Override
      public String getId() {
            return this.id;
      }
}
 
/**

 */
public class ProxyExample {
      public static void main(String[] args) {
            List<Pessoa> pessoas = new ArrayList<>();
           

            pessoas.add(new ProxyPessoa("A"));
            pessoas.add(new ProxyPessoa("B"));
            pessoas.add(new ProxyPessoa("C"));
 
            System.out.println("Nome: " + pessoas.get(0).getNome()); // busca do banco de dados
            System.out.println("Nome: " + pessoas.get(1).getNome()); // busca do banco de dados
            System.out.println("Nome: " + pessoas.get(0).getNome()); // já buscou esta pessoa... apenas retorna do cache...
 
            // A terceira pessoa nunca será consultada no banco de dados (melhor performance - lazy loading)
            System.out.println("Id da 3ª - " + pessoas.get(2).getId());//pode imprimir o ID do objeto, e o proxy nao será inicializado.
      }
}
